// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: external.proto

package generated

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ExternalOneof struct {
	FieldC uint32 `protobuf:"varint,1,opt,name=fieldC,proto3" json:"fieldC,omitempty"`
	// Types that are valid to be assigned to FieldD:
	//	*ExternalOneof_Name
	//	*ExternalOneof_Number
	FieldD isExternalOneof_FieldD `protobuf_oneof:"fieldD"`
}

func (m *ExternalOneof) Reset()                    { *m = ExternalOneof{} }
func (m *ExternalOneof) String() string            { return proto.CompactTextString(m) }
func (*ExternalOneof) ProtoMessage()               {}
func (*ExternalOneof) Descriptor() ([]byte, []int) { return fileDescriptorExternal, []int{0} }

type isExternalOneof_FieldD interface {
	isExternalOneof_FieldD()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ExternalOneof_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}
type ExternalOneof_Number struct {
	Number uint32 `protobuf:"varint,3,opt,name=number,proto3,oneof"`
}

func (*ExternalOneof_Name) isExternalOneof_FieldD()   {}
func (*ExternalOneof_Number) isExternalOneof_FieldD() {}

func (m *ExternalOneof) GetFieldD() isExternalOneof_FieldD {
	if m != nil {
		return m.FieldD
	}
	return nil
}

func (m *ExternalOneof) GetFieldC() uint32 {
	if m != nil {
		return m.FieldC
	}
	return 0
}

func (m *ExternalOneof) GetName() string {
	if x, ok := m.GetFieldD().(*ExternalOneof_Name); ok {
		return x.Name
	}
	return ""
}

func (m *ExternalOneof) GetNumber() uint32 {
	if x, ok := m.GetFieldD().(*ExternalOneof_Number); ok {
		return x.Number
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExternalOneof) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExternalOneof_OneofMarshaler, _ExternalOneof_OneofUnmarshaler, _ExternalOneof_OneofSizer, []interface{}{
		(*ExternalOneof_Name)(nil),
		(*ExternalOneof_Number)(nil),
	}
}

func _ExternalOneof_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExternalOneof)
	// fieldD
	switch x := m.FieldD.(type) {
	case *ExternalOneof_Name:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Name)
	case *ExternalOneof_Number:
		_ = b.EncodeVarint(3<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Number))
	case nil:
	default:
		return fmt.Errorf("ExternalOneof.FieldD has unexpected type %T", x)
	}
	return nil
}

func _ExternalOneof_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExternalOneof)
	switch tag {
	case 2: // fieldD.name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.FieldD = &ExternalOneof_Name{x}
		return true, err
	case 3: // fieldD.number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FieldD = &ExternalOneof_Number{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _ExternalOneof_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExternalOneof)
	// fieldD
	switch x := m.FieldD.(type) {
	case *ExternalOneof_Name:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case *ExternalOneof_Number:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Number))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ExternalOneof)(nil), "istio.tools.test.ExternalOneof")
}
func (m *ExternalOneof) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExternalOneof) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.FieldC != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintExternal(dAtA, i, uint64(m.FieldC))
	}
	if m.FieldD != nil {
		nn1, err := m.FieldD.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	return i, nil
}

func (m *ExternalOneof_Name) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x12
	i++
	i = encodeVarintExternal(dAtA, i, uint64(len(m.Name)))
	i += copy(dAtA[i:], m.Name)
	return i, nil
}
func (m *ExternalOneof_Number) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x18
	i++
	i = encodeVarintExternal(dAtA, i, uint64(m.Number))
	return i, nil
}
func encodeVarintExternal(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ExternalOneof) Size() (n int) {
	var l int
	_ = l
	if m.FieldC != 0 {
		n += 1 + sovExternal(uint64(m.FieldC))
	}
	if m.FieldD != nil {
		n += m.FieldD.Size()
	}
	return n
}

func (m *ExternalOneof_Name) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovExternal(uint64(l))
	return n
}
func (m *ExternalOneof_Number) Size() (n int) {
	var l int
	_ = l
	n += 1 + sovExternal(uint64(m.Number))
	return n
}

func sovExternal(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozExternal(x uint64) (n int) {
	return sovExternal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ExternalOneof) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowExternal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExternalOneof: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExternalOneof: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FieldC", wireType)
			}
			m.FieldC = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FieldC |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthExternal
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FieldD = &ExternalOneof_Name{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowExternal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FieldD = &ExternalOneof_Number{v}
		default:
			iNdEx = preIndex
			skippy, err := skipExternal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthExternal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipExternal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowExternal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExternal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowExternal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthExternal
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowExternal
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipExternal(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthExternal = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowExternal   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("external.proto", fileDescriptorExternal) }

var fileDescriptorExternal = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xad, 0x28, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xc8, 0x2c, 0x2e, 0xc9,
	0xcc, 0xd7, 0x2b, 0xc9, 0xcf, 0xcf, 0x29, 0xd6, 0x2b, 0x49, 0x2d, 0x2e, 0x51, 0x4a, 0xe4, 0xe2,
	0x75, 0x85, 0xaa, 0xf1, 0xcf, 0x4b, 0xcd, 0x4f, 0x13, 0x12, 0xe3, 0x62, 0x4b, 0xcb, 0x4c, 0xcd,
	0x49, 0x71, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0d, 0x82, 0xf2, 0x84, 0x44, 0xb8, 0x58, 0xf2,
	0x12, 0x73, 0x53, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x3d, 0x18, 0x82, 0xc0, 0x3c, 0x21, 0x09,
	0x2e, 0xb6, 0xbc, 0xd2, 0xdc, 0xa4, 0xd4, 0x22, 0x09, 0x66, 0x90, 0x6a, 0x0f, 0x86, 0x20, 0x28,
	0xdf, 0x89, 0x03, 0x6a, 0x8e, 0x8b, 0x93, 0xf8, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31,
	0x3e, 0x78, 0x24, 0xc7, 0x18, 0xc5, 0x99, 0x9e, 0x9a, 0x97, 0x5a, 0x94, 0x58, 0x92, 0x9a, 0x92,
	0xc4, 0x06, 0x76, 0x94, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x1b, 0x27, 0x84, 0xa6, 0x00,
	0x00, 0x00,
}
